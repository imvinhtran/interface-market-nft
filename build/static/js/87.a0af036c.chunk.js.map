{"version":3,"sources":["pages/Test/TestGrid/Footer.tsx","pages/Test/TestGrid/TestContext.tsx","pages/Test/TestGrid/Head.tsx","pages/Test/TestGrid/Main.tsx","pages/Test/TestGrid/index.tsx"],"names":["Footer","console","log","TestContext","React","createContext","height","handleSetHeight","TestContainer","children","useState","setHeight","h","value","useMemo","Provider","Head","ref","useRef","useContext","style","width","background","onClick","memo","Main","backgroundColor","TestGrid","Container","maxWidth","sx","pt","loading","src","alt"],"mappings":"0OAEe,SAASA,IAEvB,OADAC,QAAQC,IAAI,iBACL,yC,YCMKC,EAAcC,IAAMC,cAAyB,CAGzDC,OAAQ,EACRC,gBAAiB,eAmBHC,EAhBiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClC,EAA4BC,oBAAkB,GAA9C,mBACA,GADA,UAC4BA,mBAAiB,IAA7C,mBAAOJ,EAAP,KAAeK,EAAf,KAMMJ,EAAkB,SAACK,GACxBD,EAAUC,IAELC,EAAQC,mBAAQ,iBAAO,CAAER,SAAQC,qBAAoB,CAACD,IAE5D,OAAO,cAACH,EAAYY,SAAb,CAAsBF,MAAOA,EAA7B,SAAqCJ,KC1BvCO,EAAO,WACZ,IAAMC,EAAMC,iBAAuB,MACnCjB,QAAQC,IAAI,iBAEZ,IAAQK,EAAoBY,qBAAWhB,GAA/BI,gBAWR,OACC,qBACCU,IAAKA,EACLG,MAAO,CAAEC,MAAO,IAAKf,OAAQ,IAAKgB,WAAY,QAC9CC,QARmB,WACpBhB,EAAgB,MAIhB,mBAUaH,MAAMoB,KAAKR,GC1BpBS,EAAO,WACZ,IAAQnB,EAAWa,qBAAWhB,GAAtBG,OAIR,OAHAL,QAAQC,IAAI,iBACZD,QAAQC,IAAI,SAAUI,GAEf,qBAAKc,MAAO,CAAEd,OAAQA,EAAQoB,gBAAiB,SAAUL,MAAO,KAAhE,mBAGOG,iBAAKC,GCJL,SAASE,IAGvB,OAFA1B,QAAQC,IAAI,kBAGX,eAAC0B,EAAA,EAAD,CAAWC,SAAS,KAAKC,GAAI,CAAEC,GAAI,IAAnC,UACC,qBACCC,QAAQ,OACRC,IAAI,8HACJC,IAAI,OACJb,MAAM,MACNf,OAAO,QAER,qBACC0B,QAAQ,OACRC,IAAI,+FACJC,IAAI,OACJb,MAAM,MACNf,OAAO,QAER,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACN,EAAD","file":"static/js/87.a0af036c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Footer() {\n\tconsole.log('Render Footer');\n\treturn <div>Footer</div>;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState, useMemo } from 'react';\n\ninterface TestValue {\n\t// render: boolean;\n\t// handleRender: VoidFunction;\n\theight: number;\n\thandleSetHeight: Function;\n}\n\nexport const TestContext = React.createContext<TestValue>({\n\t// render: false,\n\t// handleRender: () => {},\n\theight: 0,\n\thandleSetHeight: () => {},\n});\n\nconst TestContainer: React.FC = ({ children }) => {\n\tconst [render, setRender] = useState<boolean>(false);\n\tconst [height, setHeight] = useState<number>(0);\n\n\tconst handleRender = () => {\n\t\tsetRender(!render);\n\t};\n\n\tconst handleSetHeight = (h: number) => {\n\t\tsetHeight(h);\n\t};\n\tconst value = useMemo(() => ({ height, handleSetHeight }), [height]);\n\n\treturn <TestContext.Provider value={value}>{children}</TestContext.Provider>;\n};\n\nexport default TestContainer;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { memo, useContext, useEffect, useRef } from 'react';\nimport { TestContext } from './TestContext';\n\nconst Head = () => {\n\tconst ref = useRef<HTMLDivElement>(null);\n\tconsole.log('render Head()');\n\n\tconst { handleSetHeight } = useContext(TestContext);\n\n\t// useEffect(() => {\n\t// \tif (ref.current) {\n\t// \t\thandleSetHeight(ref.current.clientHeight);\n\t// \t}\n\t// }, []);\n\tconst handleRender = () => {\n\t\thandleSetHeight(300);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tstyle={{ width: 300, height: 300, background: 'teal' }}\n\t\t\tonClick={handleRender}\n\t\t>\n\t\t\tHead\n\t\t</div>\n\t);\n};\n\nexport default React.memo(Head);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { memo, useContext, useEffect, useLayoutEffect, useRef } from 'react';\nimport { TestContext } from './TestContext';\n\nconst Main = () => {\n\tconst { height } = useContext(TestContext);\n\tconsole.log('render Main()');\n\tconsole.log('Height', height);\n\n\treturn <div style={{ height: height, backgroundColor: 'violet', width: 300 }}>Main</div>;\n};\n\nexport default memo(Main);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Container } from '@mui/material';\nimport React, { useContext } from 'react';\nimport Footer from './Footer';\nimport Head from './Head';\nimport Main from './Main';\nimport TestContainer, { TestContext } from './TestContext';\n\nexport default function TestGrid() {\n\tconsole.log('render Index()');\n\n\treturn (\n\t\t<Container maxWidth=\"xl\" sx={{ pt: 10 }}>\n\t\t\t<img\n\t\t\t\tloading=\"lazy\"\n\t\t\t\tsrc=\"https://res.cloudinary.com/dyh2c5n8i/image/upload/w_600,h_300/q_auto:best,f_auto/v1652841649/collections/1652841648675.webp\"\n\t\t\t\talt=\"test\"\n\t\t\t\twidth=\"600\"\n\t\t\t\theight=\"300\"\n\t\t\t/>\n\t\t\t<img\n\t\t\t\tloading=\"lazy\"\n\t\t\t\tsrc=\"https://res.cloudinary.com/dyh2c5n8i/image/upload/v1652841649/collections/1652841648675.webp\"\n\t\t\t\talt=\"test\"\n\t\t\t\twidth=\"600\"\n\t\t\t\theight=\"300\"\n\t\t\t/>\n\t\t\t<TestContainer>\n\t\t\t\t<Head />\n\t\t\t\t<Main />\n\t\t\t\t<Footer />\n\t\t\t</TestContainer>\n\t\t</Container>\n\t);\n}\n"],"sourceRoot":""}