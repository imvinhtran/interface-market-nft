{"version":3,"sources":["../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","components/CustomUI/LazyImages/LazyImageCustom/index.tsx","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"names":["getCircularProgressUtilityClass","slot","generateUtilityClass","circularProgressClasses","generateUtilityClasses","LazyImageCustom","src","alt","wrapperPosition","style","type","errorComponent","refresh","useState","isLoaded","setIsLoaded","isError","setIsError","refreshImg","setRefreshImg","CustomCircularProgress","props","sx","position","variant","color","theme","palette","grey","mode","size","thickness","value","disableShrink","animationDuration","left","circle","strokeLinecap","useEffect","top","width","height","loading","opacity","onLoad","setTimeout","onError","transform","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","styles","ownerState","root","capitalize","_extends","display","transition","transitions","create","main","css","CircularProgressSVG","svg","CircularProgressCircle","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","_jsx","clsx","role","children","viewBox","cx","cy","r","fill","strokeWidth"],"mappings":"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","file":"static/js/67.3c567e5e.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Box, IconButton, Skeleton, Typography } from '@mui/material';\nimport React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport CircularProgress, {\n\tcircularProgressClasses,\n\tCircularProgressProps,\n} from '@mui/material/CircularProgress';\n\nconst placeHolder = '/loadingNFT.gif';\n\nexport interface ILazyImageCustomProps {\n\tsrc: string;\n\talt: string;\n\twrapperPosition: 'absolute' | 'relative'; // In case that 'parent height' is depend on padding (ex: paddingTop: 100%;), we should use 'absolute' (parent also must have property 'position'). Else we use 'relative'.\n\tstyle?: object;\n\ttype: 'skeleton' | 'progress';\n\terrorComponent?: React.ReactElement;\n\trefresh?: boolean;\n}\n\nexport default function LazyImageCustom({\n\tsrc,\n\talt,\n\twrapperPosition,\n\tstyle,\n\ttype,\n\terrorComponent,\n\trefresh = false,\n}: ILazyImageCustomProps) {\n\t// useState\n\tconst [isLoaded, setIsLoaded] = useState<boolean>(false);\n\tconst [isError, setIsError] = useState<boolean>(false);\n\t// const [imgSrc, setImgSrc] = useState<string>(src);\n\tconst [refreshImg, setRefreshImg] = useState<boolean>(false);\n\n\tconst handleOnLoad = () => {\n\t\tsetTimeout(() => {\n\t\t\tsetIsLoaded(true);\n\t\t}, 500);\n\t};\n\n\tconst handleOnError = () => {\n\t\tsetIsError(true);\n\t\t// setImgSrc(placeHolder);\n\t};\n\n\tfunction CustomCircularProgress(props: CircularProgressProps) {\n\t\treturn (\n\t\t\t<Box sx={{ position: 'relative' }}>\n\t\t\t\t<CircularProgress\n\t\t\t\t\tvariant=\"determinate\"\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tcolor: (theme) =>\n\t\t\t\t\t\t\ttheme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n\t\t\t\t\t}}\n\t\t\t\t\tsize={40}\n\t\t\t\t\tthickness={4}\n\t\t\t\t\t{...props}\n\t\t\t\t\tvalue={100}\n\t\t\t\t/>\n\t\t\t\t<CircularProgress\n\t\t\t\t\tvariant=\"indeterminate\"\n\t\t\t\t\tdisableShrink\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tcolor: (theme) => (theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8'),\n\t\t\t\t\t\tanimationDuration: '550ms',\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t[`& .${circularProgressClasses.circle}`]: {\n\t\t\t\t\t\t\tstrokeLinecap: 'round',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tsize={40}\n\t\t\t\t\tthickness={4}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tuseEffect(() => {\n\t\tsetRefreshImg(!refreshImg);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [refresh]);\n\n\treturn (\n\t\t<Box sx={{ position: wrapperPosition, top: 0, left: 0, width: '100%', height: '100%' }}>\n\t\t\t<img\n\t\t\t\tloading=\"lazy\"\n\t\t\t\tstyle={{ ...style, opacity: isLoaded ? 1 : 0 }}\n\t\t\t\tsrc={src}\n\t\t\t\talt={alt}\n\t\t\t\tonLoad={handleOnLoad}\n\t\t\t\tonError={handleOnError}\n\t\t\t/>\n\n\t\t\t{!isLoaded && !isError && (\n\t\t\t\t<>\n\t\t\t\t\t{type === 'skeleton' ? (\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tvariant=\"rectangular\"\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: '50%',\n\t\t\t\t\t\t\t\tleft: '50%',\n\t\t\t\t\t\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CustomCircularProgress />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{/* {errorComponent} */}\n\t\t\t{isError && errorComponent}\n\t\t</Box>\n\t);\n}\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"sourceRoot":""}