{"version":3,"sources":["components/CustomUI/FilterItemGroup/Common/DropDown/styled.tsx","components/CustomUI/FilterItemGroup/Common/DropDown/index.tsx"],"names":["DropDownWrapper","styled","Box","theme","position","DropDownOverlay","display","top","left","width","height","zIndex","ButtonContent","DropDownContent","Stack","DropDown","activeDropDown","setActiveDropDown","buttonContent","dropdownContent","className","ref","useRef","useEffect","onBodyClick","event","stopPropagation","current","contains","target","document","body","addEventListener","passive","removeEventListener","onClick"],"mappings":"4OAEaA,EAAkBC,YAAOC,IAAPD,EAAY,cAAGE,MAAH,MAAgB,CAC1DC,SAAU,eAGEC,EAAkBJ,YAAOC,IAAPD,EAAY,cAAGE,MAAH,MAAgB,CAC1DC,SAAU,QACVE,QAAS,OACTC,IAAK,EACLC,KAAM,EACNC,MAAO,QACPC,OAAQ,QAERC,OAAQ,EAER,WAAY,CACXL,QAAS,aAIEM,EAAgBX,YAAOC,IAAPD,EAAY,cAAGE,MAAH,MAAgB,MAE5CU,EAAkBZ,YAAOa,IAAPb,EAAc,cAAGE,MAAH,MAAgB,CAC5DC,SAAU,WACVE,QAAS,OACTC,IAAK,OACLC,KAAM,EACNG,OAAQ,GAER,WAAY,CACXL,QAAS,a,OChBI,SAASS,EAAT,GAMK,IALnBC,EAKkB,EALlBA,eACAC,EAIkB,EAJlBA,kBACAC,EAGkB,EAHlBA,cACAC,EAEkB,EAFlBA,gBACAC,EACkB,EADlBA,UAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACT,IAAMC,EAAc,SAACC,GACpBA,EAAMC,kBAEFL,EAAIM,UAAYN,EAAIM,QAAQC,SAASH,EAAMI,SAC9CZ,GAAkB,IAMpB,OAFID,GAAgBc,SAASC,KAAKC,iBAAiB,QAASR,EAAa,CAAES,SAAS,IAE7E,WAENH,SAASC,KAAKG,oBAAoB,QAASV,MAG1C,CAACR,IAMJ,OACC,eAAChB,EAAD,CAAiBoB,UAAWA,EAAWe,QALlB,WAChBnB,GAAgBC,GAAkB,IAIvC,UACC,cAACL,EAAD,UAAgBM,IAIhB,cAACb,EAAD,CAAiBe,UAAWJ,EAAiB,SAAW,KAExD,cAACH,EAAD,CAAiBQ,IAAKA,EAAKD,UAAWJ,EAAiB,SAAW,GAAlE,SACEG","file":"static/js/79.28708eed.chunk.js","sourcesContent":["import { styled, Stack, Box } from '@mui/material';\n\nexport const DropDownWrapper = styled(Box)(({ theme }) => ({\n\tposition: 'relative',\n}));\n\nexport const DropDownOverlay = styled(Box)(({ theme }) => ({\n\tposition: 'fixed',\n\tdisplay: 'none',\n\ttop: 0,\n\tleft: 0,\n\twidth: '100vw',\n\theight: '100vh',\n\t// backgroundColor: 'black',\n\tzIndex: 1,\n\n\t'&.active': {\n\t\tdisplay: 'block',\n\t},\n}));\n\nexport const ButtonContent = styled(Box)(({ theme }) => ({}));\n\nexport const DropDownContent = styled(Stack)(({ theme }) => ({\n\tposition: 'absolute',\n\tdisplay: 'none',\n\ttop: '110%',\n\tleft: 0,\n\tzIndex: 10,\n\n\t'&.active': {\n\t\tdisplay: 'block',\n\t},\n}));\n","// import { AnimatePresence, motion } from 'framer-motion';\nimport React, { useEffect, useRef } from 'react';\n// styled\nimport { ButtonContent, DropDownContent, DropDownWrapper, DropDownOverlay } from './styled';\n// components\n// import FadeInWhenVisible from 'components/Animation/FadeInWhenVisible';\n\nexport interface IDropDownProps {\n\tactiveDropDown: boolean;\n\tsetActiveDropDown: Function;\n\tbuttonContent: React.ReactElement;\n\tdropdownContent: React.ReactElement;\n\tclassName?: string;\n}\n\nexport default function DropDown({\n\tactiveDropDown,\n\tsetActiveDropDown,\n\tbuttonContent,\n\tdropdownContent,\n\tclassName,\n}: IDropDownProps) {\n\tconst ref: any = useRef(null);\n\n\tuseEffect(() => {\n\t\tconst onBodyClick = (event: any) => {\n\t\t\tevent.stopPropagation();\n\n\t\t\tif (ref.current && !ref.current.contains(event.target)) {\n\t\t\t\tsetActiveDropDown(false);\n\t\t\t}\n\t\t};\n\t\t// Bind the event listener if dropdown is active\n\t\tif (activeDropDown) document.body.addEventListener('click', onBodyClick, { passive: true });\n\n\t\treturn () => {\n\t\t\t// Unbind the event listener on clean up\n\t\t\tdocument.body.removeEventListener('click', onBodyClick);\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [activeDropDown]);\n\n\tconst showOptionBox = () => {\n\t\tif (!activeDropDown) setActiveDropDown(true);\n\t};\n\n\treturn (\n\t\t<DropDownWrapper className={className} onClick={showOptionBox}>\n\t\t\t<ButtonContent>{buttonContent}</ButtonContent>\n\t\t\t{/* {activeDropDown && ( */}\n\t\t\t{/* <FadeInWhenVisible> */}\n\n\t\t\t<DropDownOverlay className={activeDropDown ? 'active' : ''} />\n\n\t\t\t<DropDownContent ref={ref} className={activeDropDown ? 'active' : ''}>\n\t\t\t\t{dropdownContent}\n\t\t\t</DropDownContent>\n\t\t\t{/* </FadeInWhenVisible> */}\n\t\t\t{/* )} */}\n\t\t</DropDownWrapper>\n\t);\n}\n"],"sourceRoot":""}