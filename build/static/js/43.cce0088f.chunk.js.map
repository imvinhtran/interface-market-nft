{"version":3,"sources":["apis/collectionApi.ts","redux/actions/collectionAction.ts","apis/tokenPaymentApi.ts","redux/actions/tokenPaymentAction.ts","apis/historyApi.ts","redux/actions/tradingAction.ts","pages/CollectionDetail/styled.tsx","pages/CollectionDetail/index.tsx"],"names":["collectionApi","getListTopCollection","data","filter","pageSize","page","url","axiosClient","post","fetchNewCollectionsPagination","sort","getListCollectionId","pagination","body","getSearchListCollectionId","getListCollectionByOwnerOrCreatorItems","getCollectionById","collectionId","get","getCollectionDetailById","getSearchCollectionById","createCollection","console","log","axiosAuthen","importCollection","chainId","userAddress","collectionAddress","editCollection","put","checkExistCollectionName","collectionName","getAllCategory","getListCollectionCategory","fetchAllCollection","isFetchFirstLoad","MyCallBack","a","dispatch","startLoading","response","paginationResponse","check","checkHasNextPage","currentPage","totalPages","setHasNextPage","fetchAllCollectionFirstLoadSuccess","fetchAllCollectionSuccess","hasError","getState","fetchListCollectionsByOwnerOrCreatorItems","fetchListCollectionsByOwnerOrCreatorItemsFirstLoadSuccess","fetchListCollectionsByOwnerOrCreatorItemsSuccess","fetchCollectionById","fetchCollectionByIdSuccess","fetchCollectionDetailById","tokenPaymentApi","getListPaymentTokenByChainId","changeTokenToUsd","from","to","inputPrice","fetchListPaymentTokenByChainId","fetchListTokenPaymentSuccess","tradingApi","getTradingHistoryByNFTsId","itemId","getActivityHistoryByUserAddress","getActivityHistoryByCollectionId","getActivityPriceChart","getLatestTransaction","fetchTradingHistoryByNFTsId","fetchTradingHistorySuccess","fetchUserHistory","fetchUserHistorySuccess","fetchCollectionHistory","fetchCollectionHistorySuccess","CollectionBackground","styled","Box","theme","overflow","position","borderRadius","height","breakpoints","down","CollectionMoreInfoWrapper","Stack","alignItems","marginTop","CollectionMoreInfo","maxWidth","CollectionDescription","Typography","textAlign","ReadMoreButton","cursor","palette","mode","color","primary","lighter","success","main","TabDetailCollection","Loadable","lazy","Loading","LazyImage","InfoCollection","DetailCollection","useParams","useDispatch","useState","isLoadMore","setIsLoadMore","useSelector","selectChainId","collection","selectCollectionItem","loadingCollection","selectLoadingCollection","useEffect","executeAfterFetchCollectionHistory","executeAfterFetchListTokenPayment","globalStateNewest","tradeHistory","isSuccess","toast","error","errorMessage","tokenPayment","Container","sx","pt","src","background","alt","style","objectFit","width","variant","description","sliceString","length","onClick","mt","React","memo"],"mappings":"sLAUMA,EAAgB,CACrBC,qBADqB,SACAC,EAAkBC,GACtC,IAAQC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KACZC,EAAG,oCAAgCF,EAAhC,iBAAiDC,GAC1D,OAAOE,IAAYC,KAAKF,EAAjB,eAA2BH,KAGnCM,8BAPqB,SAQpBL,EACAC,GAEA,IAAMC,EAAG,sCAAkCF,EAAlC,iBAAmDC,GAE5D,OAAOE,IAAYC,KAAKF,EAAK,CAAEI,KAAM,oBAGtCC,oBAhBqB,SAgBDC,EAAwBT,GAC3C,IAAQE,EAAmBO,EAAnBP,KAAMD,EAAaQ,EAAbR,SACRE,EAAG,sCAAkCF,EAAlC,iBAAmDC,GAEtDQ,EAAI,eAAQV,GAClB,OAAOI,IAAYC,KAAKF,EAAKO,IAG9BC,0BAxBqB,SAwBKF,EAAwBT,GACjD,IAAQE,EAAmBO,EAAnBP,KAAMD,EAAaQ,EAAbR,SACRE,EAAG,6CAAyCF,EAAzC,iBAA0DC,GAE7DQ,EAAI,eAAQV,GAClB,OAAOI,IAAYC,KAAKF,EAAKO,IAG9BE,uCAhCqB,SAiCpBH,EACAT,GAEA,IAAQE,EAAmBO,EAAnBP,KAAMD,EAAaQ,EAAbR,SACRE,EAAG,kDAA8CF,EAA9C,iBAA+DC,GAElEQ,EAAI,eAAQV,GAClB,OAAOI,IAAYC,KAAKF,EAAKO,IAG9BG,kBA3CqB,SA2CHC,GACjB,IAAMX,EAAG,oCAAgCW,GACzC,OAAOV,IAAYW,IAAIZ,IAGxBa,wBAhDqB,SAgDGF,GACvB,IAAMX,EAAG,2CAAuCW,GAChD,OAAOV,IAAYW,IAAIZ,IAGxBc,wBArDqB,SAqDGH,GACvB,IAAMX,EAAG,2CAAuCW,GAChD,OAAOV,IAAYW,IAAIZ,IAGxBe,iBA1DqB,SA0DJnB,GAIhB,OAFAoB,QAAQC,IAAI,kBAAmBrB,GAExBsB,IAAYhB,KAHV,sBAGoBN,IAG9BuB,iBAjEqB,SAkEpBC,EACAC,EACAC,GAEA,IACM1B,EAAO,CAAEwB,UAASC,cAAaC,qBAErC,OAAOJ,IAAYhB,KAHV,gBAGoBN,IAG9B2B,eA5EqB,SA4EN3B,EAA6Be,GAC3C,IAAMX,EAAG,oCAAgCW,GACzC,OAAOO,IAAYM,IAAIxB,EAAKJ,IAG7B6B,yBAjFqB,SAiFIC,EAAwBN,GAEhD,OAAOnB,IAAYC,KADV,yBACoB,CAAEwB,iBAAgBN,aAGhDO,eAtFqB,WAwFpB,OAAO1B,IAAYW,IADV,0BAGVgB,0BA1FqB,WA4FpB,OAAO3B,IAAYW,IADV,8BAKIlB,O,kPC9ER,SAASmC,EACfvB,EACAT,EACAiC,EACAC,GAEA,6BAAO,gCAAAC,EAAA,6DACNC,YAASC,eADH,kBAG4CxC,IAAcW,oBAC9DC,EACAT,GALI,OAGCsC,EAHD,OAQCC,EAAuCD,EAAS7B,WAChD+B,EAAiBC,YACtBF,EAAmBG,YACnBH,EAAmBI,YAGpBP,YAASQ,YAAeJ,IAEpBP,EACHG,YAASS,YAAmCP,IAE5CF,YAASU,YAA0BR,IAnB/B,kDAsBLF,YAASW,YAAS,EAAD,KAtBZ,yBAwBDb,GAAYA,EAAWc,eAxBtB,6EA6BD,SAASC,EACfxC,EACAT,EACAiC,EACAC,GAEA,6BAAO,gCAAAC,EAAA,6DACNC,YAASC,eADH,kBAIExC,IAAce,uCAAuCH,EAAYT,GAJnE,OAGCsC,EAHD,OAMCC,EAAuCD,EAAS7B,WAChD+B,EAAiBC,YACtBF,EAAmBG,YACnBH,EAAmBI,YAGpBP,YAASQ,YAAeJ,IAEpBP,EACHG,YAASc,YAA0DZ,IAEnEF,YAASe,YAAiDb,IAjBtD,kDAoBLF,YAASW,YAAS,EAAD,KApBZ,yBAsBDb,GAAYA,EAAWc,eAtBtB,6EA2BD,SAASI,EAAoBtC,EAAsBoB,GACzD,6BAAO,4BAAAC,EAAA,6DACNC,YAASC,eADH,kBAGwCxC,IAAcgB,kBAC1DC,GAJI,OAGCwB,EAHD,OAOLF,YAASiB,YAA2Bf,IAP/B,gDASLF,YAASW,YAAS,EAAD,KATZ,yBAWDb,GAAYA,EAAWc,eAXtB,4EAgBD,SAASM,EAA0BxC,EAAsBoB,GAC/D,6BAAO,4BAAAC,EAAA,6DACNC,YAASC,eADH,kBAGwCxC,IAAcmB,wBAC1DF,GAJI,OAGCwB,EAHD,OAOLF,YAASiB,YAA2Bf,IAP/B,gDASLF,YAASW,YAAS,EAAD,KATZ,yBAWDb,GAAYA,EAAWc,eAXtB,8E,kCClHR,aAEMO,EAAkB,CACvBC,6BADuB,SACMjC,GAC5B,IAAMpB,EAAG,mCAA+BoB,GACxC,OAAOnB,IAAYW,IAAIZ,IAGxBsD,iBANuB,SAMNC,EAAcC,EAAYC,GAE1C,OAAOxD,IAAYC,KADV,qBACoB,CAAEqD,OAAMC,KAAIC,iBAI5BL,O,2HCJR,SAASM,EAA+BtC,EAAiBW,GAC/D,6BAAO,4BAAAC,EAAA,6DACNC,YAASC,eADH,kBAIEkB,IAAgBC,6BAA6BjC,GAJ/C,OAGCe,EAHD,OAKLF,YAAS0B,YAA6BxB,IALjC,gDAOLF,YAASW,YAAS,EAAD,KACbb,GAAYA,EAAWc,eARtB,2D,kCCVR,aAEMe,EAAa,CAClBC,0BADkB,SACQjE,GACzB,IAAQkE,EAAWlE,EAAXkE,OACF9D,EAAG,4BAAwB8D,EAAxB,yBACT,OAAO7D,IAAYW,IAAIZ,IAExB+D,gCANkB,SAMc1C,GAC/B,IAAMrB,EAAG,iCAA6BqB,EAA7B,yBACT,OAAOpB,IAAYW,IAAIZ,IAExBgE,iCAVkB,SAWjBrD,GAEA,IAAMX,EAAG,kCAA8BW,EAA9B,yBACT,OAAOV,IAAYW,IAAIZ,IAExBiE,sBAhBkB,SAgBIH,GACrB,IAAM9D,EAAG,kCAA8B8D,GACvC,OAAO7D,IAAYW,IAAIZ,IAExBkE,qBApBkB,WAsBjB,OAAOjE,IAAYW,IADV,uBAKIgD,O,+LCjBR,SAASO,EAA4BvE,EAAkBmC,GAC7D,6BAAO,4BAAAC,EAAA,6DACNC,YAASC,eADH,kBAGkC0B,IAAWC,0BAA0BjE,GAHvE,OAGCuC,EAHD,OAKLF,YAASmC,YAA2BjC,IAL/B,gDAOLF,YAASW,YAAS,EAAD,KAPZ,yBASDb,GAAYA,EAAWc,eATtB,4EAcD,SAASwB,EAAiBhD,EAAqBU,GACrD,6BAAO,4BAAAC,EAAA,6DACNC,YAASC,eADH,kBAGkB0B,IAAWG,gCAAgC1C,GAH7D,OAGCc,EAHD,OAILF,YAASqC,YAAwBnC,IAJ5B,gDAMLF,YAASW,YAAS,EAAD,KANZ,yBAQDb,GAAYA,EAAWc,eARtB,4EAaD,SAAS0B,EAAuB5D,EAAsBoB,GAC5D,6BAAO,4BAAAC,EAAA,6DACNC,YAASC,eADH,kBAGkB0B,IAAWI,iCAAiCrD,GAH9D,OAGCwB,EAHD,OAILF,YAASuC,YAA8BrC,IAJlC,gDAMLF,YAASW,YAAS,EAAD,KANZ,yBAQDb,GAAYA,EAAWc,eARtB,8E,0MCxCK4B,EAAuBC,YAAOC,IAAPD,EAAY,kBAAGE,EAAH,EAAGA,MAAH,UAC/CC,SAAU,SACVC,SAAU,WACVC,aAAc,OACdC,OAAQ,KAJuC,cAK9CJ,EAAMK,YAAYC,KAAK,MAAQ,CAC/BF,OAAQ,MANsC,cAQ9CJ,EAAMK,YAAYC,KAAK,MAAQ,CAC/BF,OAAQ,MATsC,0BAapC,iCAboC,KAmBnCG,EAA4BT,YAAOU,IAAPV,EAAc,cAAGE,MAAH,MAAgB,CACtES,WAAY,SACZC,UAAW,YAGCC,EAAqBb,YAAOU,IAAPV,EAAc,cAAGE,MAAH,MAAgB,CAC/DS,WAAY,SACZG,SAAU,QAGEC,EAAwBf,YAAOgB,IAAPhB,EAAmB,cAAGE,MAAH,MAAgB,CACvEe,UAAW,SACXL,UAAW,OAGCM,EAAiBlB,YAAOgB,IAAPhB,EAAmB,gBAAGE,EAAH,EAAGA,MAAH,oBAChDiB,OAAQ,WACmB,UAAvBjB,EAAMkB,QAAQC,KACf,CACAC,MAAOpB,EAAMkB,QAAQG,QAAQC,SAE7B,CACAF,MAAOpB,EAAMkB,QAAQK,QAAQC,U,0BCZ3BC,EAAsBC,YAC3BC,gBAAK,kBAAM,oCAENC,EAAUF,YAASC,gBAAK,kBAAM,6CAC9BE,EAAYH,YAASC,gBAAK,kBAAM,2DAChCG,EAAiBJ,YACtBC,gBAAK,kBAAM,2DAGZ,SAASI,IACR,IAAQhG,EAAiBiG,cAAjBjG,aACFsB,EAAW4E,cAGjB,EAAoCC,oBAAkB,GAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KAGM5F,EAAU6F,YAAYC,KACtBC,EAAaF,YAAYG,KACzBC,EAAoBJ,YAAYK,KAGtCC,qBAAU,WACJ5G,GACLsB,EAASkB,YAA0BxC,MAGjC,CAACA,IAGJ4G,qBAAU,WACL5G,GACHsB,EAASsC,YAAuB5D,EAAc6G,MAG7C,CAAC7G,IAGJ4G,qBAAU,WACLnG,GACHa,EAASyB,YAA+BtC,EAASqG,MAEhD,CAACrG,EAASa,EAAUtB,IAGvB,IAAM6G,EAAqC,SAACE,GAC3C,IAAQC,EAAiBD,EAAjBC,aACHA,EAAaC,WACjBC,IAAMC,MAAM,oCAAsCH,EAAaI,eAI3DN,EAAoC,SAACC,GACjBA,EAAjBM,aACUJ,WACjBC,IAAMC,MAAM,sCAId,OACC,mCACET,EACA,cAACb,EAAD,IAEA,eAACyB,EAAA,EAAD,CAAWzC,SAAS,KAAK0C,GAAI,CAAEC,GAAI,OAAnC,UACC,cAAC1D,EAAD,UACC,cAACgC,EAAD,CACC2B,IAAG,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAYkB,WACjBC,IAAI,kBACJC,MAAO,CAAEC,UAAW,QAASC,MAAO,OAAQzD,OAAQ,YAGtD,cAAC0B,EAAD,CAAgBS,WAAYA,IAE3BA,GACA,cAAChC,EAAD,UACC,eAACI,EAAD,WACC,cAACE,EAAD,CAAuBiD,QAAQ,QAA/B,SACE3B,EACEI,EAAWwB,YACXC,YAAYzB,EAAWwB,YAAa,OAGvCxB,EAAWwB,YAAYE,OAAS,MAAQ9B,GACxC,cAACnB,EAAD,CACC8C,QAAQ,SACRI,QAAS,WACR9B,GAAc,IAHhB,uBAUAD,GACA,cAACnB,EAAD,CACC8C,QAAQ,SACRI,QAAS,WACR9B,GAAc,IAHhB,4BAaJ,cAACrC,EAAA,EAAD,CAAKuD,GAAI,CAAEa,GAAI,QAAf,SACC,cAAC1C,EAAD,WAQS2C,cAAMC,KAAKtC","file":"static/js/43.cce0088f.chunk.js","sourcesContent":["import {\n\tCollection,\n\tListParams,\n\tListResponse,\n\tCreateCollectionInput,\n\tCollectionCategory,\n} from 'models';\nimport axiosAuthen from './axiosAuthen';\nimport axiosClient from './axiosClient';\n\nconst collectionApi = {\n\tgetListTopCollection(data: ListParams, filter: ListParams): Promise<ListResponse<Collection>> {\n\t\tconst { pageSize, page } = data;\n\t\tconst url = `/collections/top/pageSize/${pageSize}/page/${page}`;\n\t\treturn axiosClient.post(url, { ...filter });\n\t},\n\n\tfetchNewCollectionsPagination(\n\t\tpageSize: number,\n\t\tpage: number\n\t): Promise<ListResponse<Collection>> {\n\t\tconst url = `/collections/query/pageSize/${pageSize}/page/${page}`;\n\n\t\treturn axiosClient.post(url, { sort: 'createdAt:desc' });\n\t},\n\n\tgetListCollectionId(pagination: ListParams, filter: ListParams): Promise<any> {\n\t\tconst { page, pageSize } = pagination;\n\t\tconst url = `/collections/query/pageSize/${pageSize}/page/${page}`;\n\n\t\tconst body = { ...filter };\n\t\treturn axiosClient.post(url, body);\n\t},\n\n\tgetSearchListCollectionId(pagination: ListParams, filter: ListParams): Promise<any> {\n\t\tconst { page, pageSize } = pagination;\n\t\tconst url = `/collections/query-search/pageSize/${pageSize}/page/${page}`;\n\n\t\tconst body = { ...filter };\n\t\treturn axiosClient.post(url, body);\n\t},\n\n\tgetListCollectionByOwnerOrCreatorItems(\n\t\tpagination: ListParams,\n\t\tfilter: ListParams\n\t): Promise<any> {\n\t\tconst { page, pageSize } = pagination;\n\t\tconst url = `/collections/collectible-asset/pageSize/${pageSize}/page/${page}`;\n\n\t\tconst body = { ...filter };\n\t\treturn axiosClient.post(url, body);\n\t},\n\n\tgetCollectionById(collectionId: string): Promise<any> {\n\t\tconst url = `/collections/collectionId/${collectionId}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tgetCollectionDetailById(collectionId: string): Promise<any> {\n\t\tconst url = `/collections/detail/collectionId/${collectionId}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tgetSearchCollectionById(collectionId: string): Promise<any> {\n\t\tconst url = `/collections/search/collectionId/${collectionId}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tcreateCollection(data: CreateCollectionInput): Promise<any> {\n\t\tconst url = `/collections/create`;\n\t\tconsole.log('data gui len ne', data);\n\n\t\treturn axiosAuthen.post(url, data);\n\t},\n\n\timportCollection(\n\t\tchainId: number,\n\t\tuserAddress: string,\n\t\tcollectionAddress: string\n\t): Promise<any> {\n\t\tconst url = `/items/import`;\n\t\tconst data = { chainId, userAddress, collectionAddress };\n\n\t\treturn axiosAuthen.post(url, data);\n\t},\n\n\teditCollection(data: CreateCollectionInput, collectionId: string): Promise<any> {\n\t\tconst url = `/collections/collectionId/${collectionId}`;\n\t\treturn axiosAuthen.put(url, data);\n\t},\n\n\tcheckExistCollectionName(collectionName: string, chainId: number): Promise<any> {\n\t\tconst url = `/collections/checkName`;\n\t\treturn axiosClient.post(url, { collectionName, chainId });\n\t},\n\n\tgetAllCategory(): Promise<any> {\n\t\tconst url = `/collections/category`;\n\t\treturn axiosClient.get(url);\n\t},\n\tgetListCollectionCategory(): Promise<CollectionCategory[]> {\n\t\tconst url = `/collections/topCategory`;\n\t\treturn axiosClient.get(url);\n\t},\n};\n\nexport default collectionApi;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport collectionApi from 'apis/collectionApi';\nimport { Collection, ListParams, ListResponse, PaginationParams, Response } from 'models';\n\nimport {\n\tstartLoading,\n\thasError,\n\tfetchAllCollectionFirstLoadSuccess,\n\tfetchAllCollectionSuccess,\n\tfetchListCollectionsByOwnerOrCreatorItemsFirstLoadSuccess,\n\tfetchListCollectionsByOwnerOrCreatorItemsSuccess,\n\tfetchCollectionByIdSuccess,\n\tcreateCollectionSuccess,\n\teditCollectionSuccess,\n\tsetHasNextPage,\n} from 'redux/slices/collectionSlice';\n//utils\nimport {\n\tcallTransaction,\n\tcheckHasNextPage,\n\tencodeFunctionCall,\n\tsendTransaction,\n\twaitingForMined,\n} from 'utils';\n//constants\nimport { CONTRACT } from '../../constants';\nimport { dispatch, getState } from '../store';\n\nexport function fetchAllCollection(\n\tpagination: ListParams,\n\tfilter: ListParams,\n\tisFetchFirstLoad: boolean,\n\tMyCallBack?: Function\n) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response: ListResponse<Collection> = await collectionApi.getListCollectionId(\n\t\t\t\tpagination,\n\t\t\t\tfilter\n\t\t\t);\n\n\t\t\tconst paginationResponse: PaginationParams = response.pagination;\n\t\t\tconst check: boolean = checkHasNextPage(\n\t\t\t\tpaginationResponse.currentPage,\n\t\t\t\tpaginationResponse.totalPages\n\t\t\t);\n\n\t\t\tdispatch(setHasNextPage(check));\n\n\t\t\tif (isFetchFirstLoad) {\n\t\t\t\tdispatch(fetchAllCollectionFirstLoadSuccess(response));\n\t\t\t} else {\n\t\t\t\tdispatch(fetchAllCollectionSuccess(response));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nexport function fetchListCollectionsByOwnerOrCreatorItems(\n\tpagination: ListParams,\n\tfilter: ListParams,\n\tisFetchFirstLoad: boolean,\n\tMyCallBack?: Function\n) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response: ListResponse<Collection> =\n\t\t\t\tawait collectionApi.getListCollectionByOwnerOrCreatorItems(pagination, filter);\n\n\t\t\tconst paginationResponse: PaginationParams = response.pagination;\n\t\t\tconst check: boolean = checkHasNextPage(\n\t\t\t\tpaginationResponse.currentPage,\n\t\t\t\tpaginationResponse.totalPages\n\t\t\t);\n\n\t\t\tdispatch(setHasNextPage(check));\n\n\t\t\tif (isFetchFirstLoad) {\n\t\t\t\tdispatch(fetchListCollectionsByOwnerOrCreatorItemsFirstLoadSuccess(response));\n\t\t\t} else {\n\t\t\t\tdispatch(fetchListCollectionsByOwnerOrCreatorItemsSuccess(response));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nexport function fetchCollectionById(collectionId: string, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response: Response<Collection> = await collectionApi.getCollectionById(\n\t\t\t\tcollectionId\n\t\t\t);\n\n\t\t\tdispatch(fetchCollectionByIdSuccess(response));\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nexport function fetchCollectionDetailById(collectionId: string, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response: Response<Collection> = await collectionApi.getCollectionDetailById(\n\t\t\t\tcollectionId\n\t\t\t);\n\n\t\t\tdispatch(fetchCollectionByIdSuccess(response));\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nexport function createCollection(data: Collection, myCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response = await collectionApi.createCollection(data);\n\t\t\tdispatch(createCollectionSuccess());\n\t\t} catch (error: any) {\n\t\t\tconsole.log(error.error);\n\t\t\tdispatch(hasError(error));\n\t\t}\n\t};\n}\n\nexport function editCollection(data: Collection, collectionId: string, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response = await collectionApi.editCollection(data, collectionId);\n\t\t\tdispatch(editCollectionSuccess());\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nconst callNFTAddress = async (chainId: number, address: string, salt: any, web3: any) => {\n\tconst encodedCall = await encodeFunctionCall(web3, 'getAddress(uint256)', ['uint256'], [salt]);\n\n\treturn callTransaction(address, CONTRACT[chainId].COLLECTION, encodedCall);\n};\n\nconst deployNewNFT = async (chainId: number, address: any, salt: number, web3: any) => {\n\tconst encodedCall = await encodeFunctionCall(web3, 'deploy(uint256)', ['uint256'], [salt]);\n\n\t//Consider using estimate gas later\n\t// const gas = await web3.eth.estimateGas({\n\t// \tfrom: address,\n\t// \tto: CONTRACT[chainId].COLLECTION,\n\t// \tdata: encodedCall,\n\t// });\n\n\tconst txHash = await sendTransaction(\n\t\taddress,\n\t\tCONTRACT[chainId].COLLECTION,\n\t\t'0x0000000000000000000000000000000000000000000000000000000000000000',\n\t\tencodedCall,\n\t\t`0x556BA8`,\n\t\t'0x77359400'\n\t);\n\n\treturn waitingForMined(txHash, web3);\n};\n","import axiosClient from './axiosClient';\n\nconst tokenPaymentApi = {\n\tgetListPaymentTokenByChainId(chainId: number): Promise<any> {\n\t\tconst url = `orders/listToken?chainId=${chainId}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tchangeTokenToUsd(from: string, to: string, inputPrice: string): Promise<any> {\n\t\tconst url = `/items/changePrice`;\n\t\treturn axiosClient.post(url, { from, to, inputPrice });\n\t},\n};\n\nexport default tokenPaymentApi;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport tokenPaymentApi from 'apis/tokenPaymentApi';\nimport { ListResponseNonPaging, TokenPayment } from 'models';\nimport {\n\tstartLoading,\n\thasError,\n\tfetchListTokenPaymentSuccess,\n} from 'redux/slices/tokenPaymentSlice';\nimport { dispatch, getState } from '../store';\n\nexport function fetchListPaymentTokenByChainId(chainId: number, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response: ListResponseNonPaging<TokenPayment> =\n\t\t\t\tawait tokenPaymentApi.getListPaymentTokenByChainId(chainId);\n\t\t\tdispatch(fetchListTokenPaymentSuccess(response));\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n","import { ListParams, ListResponse, UserActivity, PriceActivity, CollectionActivity } from 'models';\nimport axiosClient from './axiosClient';\n\nconst tradingApi = {\n\tgetTradingHistoryByNFTsId(data: ListParams): Promise<any> {\n\t\tconst { itemId } = data;\n\t\tconst url = `/histories/itemId/${itemId}/pageSize/9999/page/1`;\n\t\treturn axiosClient.get(url);\n\t},\n\tgetActivityHistoryByUserAddress(userAddress: string): Promise<ListResponse<UserActivity>> {\n\t\tconst url = `/histories/userAddress/${userAddress}/pageSize/9999/page/1`;\n\t\treturn axiosClient.get(url);\n\t},\n\tgetActivityHistoryByCollectionId(\n\t\tcollectionId: string\n\t): Promise<ListResponse<CollectionActivity>> {\n\t\tconst url = `/histories/collectionId/${collectionId}/pageSize/9999/page/1`;\n\t\treturn axiosClient.get(url);\n\t},\n\tgetActivityPriceChart(itemId: string): Promise<PriceActivity[]> {\n\t\tconst url = `/histories/chart/itemId/${itemId}`;\n\t\treturn axiosClient.get(url);\n\t},\n\tgetLatestTransaction(): Promise<any> {\n\t\tconst url = `/histories/latest`;\n\t\treturn axiosClient.get(url);\n\t},\n};\n\nexport default tradingApi;\n","import { ListParams } from 'models';\nimport { dispatch, getState } from '../store';\nimport tradingApi from 'apis/historyApi';\nimport {\n\tstartLoading,\n\thasError,\n\tfetchTradingHistorySuccess,\n\tfetchUserHistorySuccess,\n\tfetchCollectionHistorySuccess,\n} from 'redux/slices/tradingSlice';\nimport { ItemActivity } from 'models';\n\nexport function fetchTradingHistoryByNFTsId(data: ListParams, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response: ItemActivity[] = await tradingApi.getTradingHistoryByNFTsId(data);\n\n\t\t\tdispatch(fetchTradingHistorySuccess(response));\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nexport function fetchUserHistory(userAddress: string, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response = await tradingApi.getActivityHistoryByUserAddress(userAddress);\n\t\t\tdispatch(fetchUserHistorySuccess(response));\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n\nexport function fetchCollectionHistory(collectionId: string, MyCallBack?: Function) {\n\treturn async () => {\n\t\tdispatch(startLoading());\n\t\ttry {\n\t\t\tconst response = await tradingApi.getActivityHistoryByCollectionId(collectionId);\n\t\t\tdispatch(fetchCollectionHistorySuccess(response));\n\t\t} catch (error) {\n\t\t\tdispatch(hasError(error));\n\t\t} finally {\n\t\t\tif (MyCallBack) MyCallBack(getState());\n\t\t}\n\t};\n}\n","import { styled, Box, Stack, Typography } from '@mui/material';\n\nexport const CollectionBackground = styled(Box)(({ theme }) => ({\n\toverflow: 'hidden',\n\tposition: 'relative',\n\tborderRadius: '10px',\n\theight: 250,\n\t[theme.breakpoints.down('lg')]: {\n\t\theight: 200,\n\t},\n\t[theme.breakpoints.down('md')]: {\n\t\theight: 150,\n\t},\n\t// boxShadow: '0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)',\n\t// boxShadow: '0px 0px 6px 2px rgba(66,66,66,0.81)',\n\tboxShadow: '0px 0px 5px rgba(20, 86, 163)',\n\t// boxShadow: '0px 4px 8px 6px rgba(255,255,255,0.49)',\n\t// WebkitBoxShadow: '0px 4px 8px 6px rgba(255,255,255,0.49)',\n\t// MozBoxShadow: '0px 4px 8px 6px rgba(255,255,255,0.49)',\n}));\n\nexport const CollectionMoreInfoWrapper = styled(Stack)(({ theme }) => ({\n\talignItems: 'center',\n\tmarginTop: '-40px',\n}));\n\nexport const CollectionMoreInfo = styled(Stack)(({ theme }) => ({\n\talignItems: 'center',\n\tmaxWidth: 800,\n}));\n\nexport const CollectionDescription = styled(Typography)(({ theme }) => ({\n\ttextAlign: 'center',\n\tmarginTop: 25,\n}));\n\nexport const ReadMoreButton = styled(Typography)(({ theme }) => ({\n\tcursor: 'pointer',\n\t...(theme.palette.mode === 'light'\n\t\t? {\n\t\t\t\tcolor: theme.palette.primary.lighter,\n\t\t  }\n\t\t: {\n\t\t\t\tcolor: theme.palette.success.main,\n\t\t  }),\n}));\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { lazy, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\n//mui\nimport { Box, Container } from '@mui/material';\n//components\nimport Loadable from 'components/CustomUI/LoadableComponent';\n//redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'redux/store';\nimport { selectChainId } from 'redux/slices/web3InfoSlice';\nimport {\n\tselectCollectionItem,\n\tselectLoading as selectLoadingCollection,\n} from 'redux/slices/collectionSlice';\n// actions\nimport { fetchCollectionDetailById } from 'redux/actions/collectionAction';\nimport { fetchListPaymentTokenByChainId } from 'redux/actions/tokenPaymentAction';\n// styled\nimport {\n\tCollectionBackground,\n\tCollectionDescription,\n\tCollectionMoreInfo,\n\tCollectionMoreInfoWrapper,\n\tReadMoreButton,\n} from './styled';\nimport { fetchCollectionHistory } from 'redux/actions/tradingAction';\nimport { sliceString } from 'utils';\n\n//Loadable components\nconst TabDetailCollection = Loadable(\n\tlazy(() => import('components/pages/CollectionDetail/TabDetailCollection'))\n);\nconst Loading = Loadable(lazy(() => import('components/CustomUI/LoadingPage')));\nconst LazyImage = Loadable(lazy(() => import('components/CustomUI/LazyImages/LazyImage')));\nconst InfoCollection = Loadable(\n\tlazy(() => import('components/pages/CollectionDetail/InfoCollection'))\n);\n\nfunction DetailCollection() {\n\tconst { collectionId } = useParams();\n\tconst dispatch = useDispatch();\n\n\t// useState\n\tconst [isLoadMore, setIsLoadMore] = useState<boolean>(false);\n\n\t// useSelector\n\tconst chainId = useSelector(selectChainId);\n\tconst collection = useSelector(selectCollectionItem);\n\tconst loadingCollection = useSelector(selectLoadingCollection);\n\n\t// fetch collection by id\n\tuseEffect(() => {\n\t\tif (!collectionId) return;\n\t\tdispatch(fetchCollectionDetailById(collectionId));\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [collectionId]);\n\n\t// fetch histories of collection\n\tuseEffect(() => {\n\t\tif (collectionId) {\n\t\t\tdispatch(fetchCollectionHistory(collectionId, executeAfterFetchCollectionHistory));\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [collectionId]);\n\n\t// fetch list token payment\n\tuseEffect(() => {\n\t\tif (chainId) {\n\t\t\tdispatch(fetchListPaymentTokenByChainId(chainId, executeAfterFetchListTokenPayment));\n\t\t}\n\t}, [chainId, dispatch, collectionId]);\n\n\t// function\n\tconst executeAfterFetchCollectionHistory = (globalStateNewest: RootState) => {\n\t\tconst { tradeHistory } = globalStateNewest;\n\t\tif (!tradeHistory.isSuccess) {\n\t\t\ttoast.error('Can not fetch collection history!' + tradeHistory.errorMessage);\n\t\t}\n\t};\n\n\tconst executeAfterFetchListTokenPayment = (globalStateNewest: RootState) => {\n\t\tconst { tokenPayment } = globalStateNewest;\n\t\tif (!tokenPayment.isSuccess) {\n\t\t\ttoast.error('Can not fetch list token payment!');\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{loadingCollection ? (\n\t\t\t\t<Loading />\n\t\t\t) : (\n\t\t\t\t<Container maxWidth=\"xl\" sx={{ pt: '5px' }}>\n\t\t\t\t\t<CollectionBackground>\n\t\t\t\t\t\t<LazyImage\n\t\t\t\t\t\t\tsrc={collection?.background}\n\t\t\t\t\t\t\talt=\"user background\"\n\t\t\t\t\t\t\tstyle={{ objectFit: 'cover', width: '100%', height: '100%' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CollectionBackground>\n\t\t\t\t\t<InfoCollection collection={collection} />\n\n\t\t\t\t\t{collection && (\n\t\t\t\t\t\t<CollectionMoreInfoWrapper>\n\t\t\t\t\t\t\t<CollectionMoreInfo>\n\t\t\t\t\t\t\t\t<CollectionDescription variant=\"body1\">\n\t\t\t\t\t\t\t\t\t{isLoadMore\n\t\t\t\t\t\t\t\t\t\t? collection.description\n\t\t\t\t\t\t\t\t\t\t: sliceString(collection.description, 100)}\n\t\t\t\t\t\t\t\t</CollectionDescription>\n\n\t\t\t\t\t\t\t\t{collection.description.length > 100 && !isLoadMore && (\n\t\t\t\t\t\t\t\t\t<ReadMoreButton\n\t\t\t\t\t\t\t\t\t\tvariant=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetIsLoadMore(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRead more\n\t\t\t\t\t\t\t\t\t</ReadMoreButton>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{isLoadMore && (\n\t\t\t\t\t\t\t\t\t<ReadMoreButton\n\t\t\t\t\t\t\t\t\t\tvariant=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetIsLoadMore(false);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tShow less\n\t\t\t\t\t\t\t\t\t</ReadMoreButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</CollectionMoreInfo>\n\t\t\t\t\t\t</CollectionMoreInfoWrapper>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Box sx={{ mt: '60px' }}>\n\t\t\t\t\t\t<TabDetailCollection />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default React.memo(DetailCollection);\n"],"sourceRoot":""}