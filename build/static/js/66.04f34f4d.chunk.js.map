{"version":3,"sources":["assets/icons/copy.webp","components/CustomUI/CopyToClipboardButton/index.tsx","components/pages/CollectionDetail/InfoCollection/styled.tsx","components/pages/CollectionDetail/InfoCollection/index.tsx"],"names":["CopyToClipboardButton","text","placementTooltip","useState","isOpenTooltipCopy","setIsOpenTooltipCopy","useEffect","id","setTimeout","clearTimeout","onCopy","Tooltip","placement","arrow","PopperProps","disablePortal","open","disableFocusListener","disableHoverListener","disableTouchListener","title","sx","cursor","Stack","direction","width","Box","src","CopyIcon","alt","style","display","breakpointsCollectionInfoStack","InfoCollectionWrapper","styled","theme","position","transform","borderRadius","padding","margin","boxShadow","breakpoints","down","top","backgroundColor","textAlign","palette","mode","background","primaryLight","main","color","MoreOptions","right","borderColor","border","InfoStack","up","flexDirection","AvatarWrapper","grey","CollectionInfo","marginLeft","alignItems","CollectionName","Typography","InfoAddressList","InfoAddressItem","marginTop","InfoAddress","marginRight","fontSize","DetailCollectionStatistic","Loadable","lazy","InfoCollection","collection","collectionId","useParams","navigate","useNavigate","userAddress","useSelector","selectAddress","height","logo","spacing","variant","collectionName","chainId","blockchain","NETWORKINFO","name","loading","image","getBlockchainIcon","mt","sliceAddress","collectionAddress","royalties","url","via","ml","onClick"],"mappings":"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","file":"static/js/66.04f34f4d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/copy.424d6621.webp\";","import React, { useEffect, useState } from 'react';\n// mui\nimport { Box, Stack, Tooltip } from '@mui/material';\n// libs\nimport CopyToClipboard from 'react-copy-to-clipboard';\n//images\nimport CopyIcon from 'assets/icons/copy.webp';\n\nexport interface ICopyToClipboardButtonProps {\n\ttext: string | null | undefined;\n\tplacementTooltip:\n\t\t| 'top'\n\t\t| 'bottom-end'\n\t\t| 'bottom-start'\n\t\t| 'bottom'\n\t\t| 'left-end'\n\t\t| 'left-start'\n\t\t| 'left'\n\t\t| 'right-end'\n\t\t| 'right-start'\n\t\t| 'right'\n\t\t| 'top-end'\n\t\t| 'top-start'\n\t\t| undefined;\n}\n\nexport default function CopyToClipboardButton({\n\ttext,\n\tplacementTooltip,\n}: ICopyToClipboardButtonProps) {\n\tconst [isOpenTooltipCopy, setIsOpenTooltipCopy] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (isOpenTooltipCopy) {\n\t\t\tlet id = setTimeout(() => {\n\t\t\t\tsetIsOpenTooltipCopy(false);\n\t\t\t}, 500);\n\t\t\treturn () => clearTimeout(id);\n\t\t}\n\t}, [isOpenTooltipCopy]);\n\n\treturn (\n\t\t<CopyToClipboard\n\t\t\ttext={text ?? ''}\n\t\t\tonCopy={() => {\n\t\t\t\tsetIsOpenTooltipCopy(true);\n\t\t\t}}\n\t\t>\n\t\t\t<Tooltip\n\t\t\t\tplacement={placementTooltip}\n\t\t\t\tarrow\n\t\t\t\tPopperProps={{\n\t\t\t\t\tdisablePortal: true,\n\t\t\t\t}}\n\t\t\t\topen={isOpenTooltipCopy}\n\t\t\t\tdisableFocusListener\n\t\t\t\tdisableHoverListener\n\t\t\t\tdisableTouchListener\n\t\t\t\ttitle=\"Copied !\"\n\t\t\t\tsx={{ cursor: 'pointer' }}\n\t\t\t>\n\t\t\t\t<Stack direction=\"row\" width=\"fit-content\">\n\t\t\t\t\t<Box sx={{ width: '20px' }}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={CopyIcon}\n\t\t\t\t\t\t\talt=\"icon copy\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tstyle={{ display: 'block' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Stack>\n\t\t\t</Tooltip>\n\t\t</CopyToClipboard>\n\t);\n}\n","import { styled, Box, Typography, Stack } from '@mui/material';\n\nexport const breakpointsCollectionInfoStack = 1250;\n\nexport const InfoCollectionWrapper = styled(Box)(({ theme }) => ({\n\tposition: 'relative',\n\ttransform: 'translateY(-30%)',\n\tborderRadius: 25,\n\tpadding: '20px 0px 20px 40px',\n\tmargin: '0 100px',\n\tboxShadow: '0px 0px 5px rgba(20, 86, 163)',\n\n\t[theme.breakpoints.down(breakpointsCollectionInfoStack)]: {\n\t\tboxShadow: 'unset',\n\t\tmargin: 'unset',\n\t\tpadding: 'unset',\n\t\ttop: -70,\n\t\ttransform: 'unset',\n\t\tbackgroundColor: 'unset',\n\t\ttextAlign: 'center',\n\t},\n\n\t...(theme.palette.mode === 'light'\n\t\t? {\n\t\t\t\tbackground: theme.palette.primaryLight.main,\n\t\t  }\n\t\t: {\n\t\t\t\tbackground: 'rgba(2, 28, 56, 0.7)',\n\t\t\t\tcolor: 'white',\n\t\t  }),\n}));\n\nexport const MoreOptions = styled(Box)(({ theme }) => ({\n\tposition: 'absolute',\n\ttop: 20,\n\tright: 20,\n\t...(theme.palette.mode === 'light'\n\t\t? {\n\t\t\t\tborderColor: '#000',\n\t\t  }\n\t\t: {\n\t\t\t\tborderColor: '#fff',\n\t\t  }),\n\n\t[theme.breakpoints.down(breakpointsCollectionInfoStack)]: {\n\t\ttop: 80,\n\t\tright: 10,\n\t\tborder: '1px solid',\n\t\tborderRadius: 10,\n\t\tpadding: '5px 10px',\n\t},\n\n\t[theme.breakpoints.down('sm')]: {\n\t\tborder: 'unset',\n\t\tpadding: 0,\n\t},\n}));\n\nexport const InfoStack = styled(Stack)(({ theme }) => ({\n\t[theme.breakpoints.up(breakpointsCollectionInfoStack)]: {\n\t\tflexDirection: 'row',\n\t},\n}));\n\nexport const AvatarWrapper = styled(Box)(({ theme }) => ({\n\tborderRadius: '50%',\n\t[theme.breakpoints.down(breakpointsCollectionInfoStack)]: {\n\t\tboxShadow: `0px 0px 5px ${theme.palette.grey['500']}`,\n\t},\n}));\n\nexport const CollectionInfo = styled(Stack)(({ theme }) => ({\n\tmarginLeft: '20px',\n\n\t[theme.breakpoints.down(breakpointsCollectionInfoStack)]: {\n\t\tmarginLeft: 0,\n\t\talignItems: 'center',\n\t},\n}));\n\nexport const CollectionName = styled(Typography)(({ theme }) => ({}));\n\nexport const InfoAddressList = styled(Box)(({ theme }) => ({\n\t[theme.breakpoints.down(breakpointsCollectionInfoStack)]: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n}));\n\nexport const InfoAddressItem = styled(Box)(({ theme }) => ({\n\tdisplay: 'flex',\n\tmarginTop: 2,\n}));\n\nexport const InfoAddress = styled(Typography)(({ theme }) => ({\n\tmarginRight: 5,\n\n\t[theme.breakpoints.down(500)]: {\n\t\tfontSize: 14,\n\t},\n}));\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { lazy } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TwitterShareButton } from 'react-share';\n// ultis\nimport { renderImage, sliceAddress } from 'utils/function';\n// model\nimport { Collection } from 'models';\n// styled\nimport {\n\tInfoCollectionWrapper,\n\tInfoStack,\n\tCollectionName,\n\tCollectionInfo,\n\tMoreOptions,\n\tAvatarWrapper,\n\tInfoAddressList,\n\tInfoAddressItem,\n\tInfoAddress,\n} from './styled';\n// components\nimport Loadable from 'components/CustomUI/LoadableComponent';\n// mui\nimport { Avatar, Stack, Tooltip, Typography } from '@mui/material';\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\nimport ShareIcon from '@mui/icons-material/Share';\n//redux\nimport { useSelector } from 'react-redux';\nimport { selectAddress } from 'redux/slices/web3InfoSlice';\nimport CopyToClipboardButton from 'components/CustomUI/CopyToClipboardButton';\nimport { NETWORKINFO } from 'constants/etherscan.constant';\n\nconst DetailCollectionStatistic = Loadable(lazy(() => import('../DetailCollectionStatistic')));\n\nexport type InfoCollectionProps = {\n\tcollection: Collection | null;\n};\n\nfunction InfoCollection({ collection }: InfoCollectionProps) {\n\tconst { collectionId } = useParams();\n\tconst navigate = useNavigate();\n\n\t// useSelector\n\tconst userAddress = useSelector(selectAddress);\n\n\tconst getBlockchainIcon = (chainId: number) => {\n\t\tconst blockchain = NETWORKINFO[chainId];\n\t\treturn (\n\t\t\t<Tooltip title={blockchain.name} placement=\"top\" aria-describedby=\"tip1\" arrow>\n\t\t\t\t<img\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\tsrc={blockchain.image}\n\t\t\t\t\talt=\"blockchain icon\"\n\t\t\t\t\twidth=\"24\"\n\t\t\t\t\theight=\"24\"\n\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t);\n\t};\n\n\treturn (\n\t\t<InfoCollectionWrapper>\n\t\t\t{collection && (\n\t\t\t\t<InfoStack alignItems=\"center\">\n\t\t\t\t\t<AvatarWrapper>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tsx={{ width: '120px', height: '120px', background: '#0768ff' }}\n\t\t\t\t\t\t\tsrc={collection.logo}\n\t\t\t\t\t\t\talt=\"collection logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</AvatarWrapper>\n\t\t\t\t\t<CollectionInfo>\n\t\t\t\t\t\t<Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n\t\t\t\t\t\t\t<CollectionName variant=\"h4\">\n\t\t\t\t\t\t\t\t{collection?.collectionName}\n\t\t\t\t\t\t\t</CollectionName>\n\n\t\t\t\t\t\t\t{getBlockchainIcon(collection.chainId)}\n\t\t\t\t\t\t</Stack>\n\n\t\t\t\t\t\t<InfoAddressList sx={{ mt: 0 }}>\n\t\t\t\t\t\t\t<InfoAddressItem>\n\t\t\t\t\t\t\t\t<InfoAddress variant=\"body1\">Collection address:</InfoAddress>\n\t\t\t\t\t\t\t\t<Stack direction=\"row\">\n\t\t\t\t\t\t\t\t\t<InfoAddress variant=\"body1\">\n\t\t\t\t\t\t\t\t\t\t{sliceAddress(collection.collectionAddress, 8, 5)}\n\t\t\t\t\t\t\t\t\t</InfoAddress>\n\t\t\t\t\t\t\t\t\t<CopyToClipboardButton\n\t\t\t\t\t\t\t\t\t\ttext={collection.collectionAddress}\n\t\t\t\t\t\t\t\t\t\tplacementTooltip=\"right\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</InfoAddressItem>\n\n\t\t\t\t\t\t\t<InfoAddressItem>\n\t\t\t\t\t\t\t\t<InfoAddress variant=\"body1\">Owned by:</InfoAddress>\n\t\t\t\t\t\t\t\t<Stack direction=\"row\">\n\t\t\t\t\t\t\t\t\t<InfoAddress variant=\"body1\">\n\t\t\t\t\t\t\t\t\t\t{sliceAddress(collection.userAddress, 8, 5)}\n\t\t\t\t\t\t\t\t\t</InfoAddress>\n\t\t\t\t\t\t\t\t\t<CopyToClipboardButton\n\t\t\t\t\t\t\t\t\t\ttext={collection.userAddress}\n\t\t\t\t\t\t\t\t\t\tplacementTooltip=\"right\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t</InfoAddressItem>\n\t\t\t\t\t\t</InfoAddressList>\n\n\t\t\t\t\t\t<Typography variant=\"body1\" sx={{ mt: 3 }}>\n\t\t\t\t\t\t\tRoyalties: {collection?.royalties}%\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CollectionInfo>\n\n\t\t\t\t\t{collection && <DetailCollectionStatistic collection={collection} />}\n\n\t\t\t\t\t<MoreOptions>\n\t\t\t\t\t\t<Stack direction=\"row\">\n\t\t\t\t\t\t\t<TwitterShareButton\n\t\t\t\t\t\t\t\turl={`https://nftspacex.io/#/collections/view/${collection.collectionId}`}\n\t\t\t\t\t\t\t\t// url=\"https://nftspacex.io/#/detail/6273b63badcba59d78a9bc75\"\n\t\t\t\t\t\t\t\ttitle={`Look what I found! Collection ${collection.collectionName}`}\n\t\t\t\t\t\t\t\t// hashtags={['Music', 'Game']}\n\t\t\t\t\t\t\t\tvia=\"NFTSpaceX\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\ttitle={'Share'}\n\t\t\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\t\t\taria-describedby=\"tip1\"\n\t\t\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ShareIcon sx={{ ml: 2, cursor: 'pointer' }} />\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</TwitterShareButton>\n\n\t\t\t\t\t\t\t{collection?.userAddress === userAddress && (\n\t\t\t\t\t\t\t\t<Tooltip title=\"Edit\" placement=\"top\" aria-describedby=\"tip1\" arrow>\n\t\t\t\t\t\t\t\t\t<AppRegistrationIcon\n\t\t\t\t\t\t\t\t\t\tsx={{ ml: 2, cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tnavigate(`/collections/edit-collection/${collectionId}`)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</MoreOptions>\n\t\t\t\t</InfoStack>\n\t\t\t)}\n\t\t</InfoCollectionWrapper>\n\t);\n}\n\nexport default InfoCollection;\n"],"sourceRoot":""}